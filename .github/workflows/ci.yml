name: CI
"on":
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:
  lint-dockerfile:
    name: Lint Dockerfile
    runs-on: ubuntu-latest
    steps:
      - name: Git checkout
        uses: actions/checkout@v2
      - name: Run Hadolint Dockerfile Linter
        uses: burdzwastaken/hadolint-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          HADOLINT_ACTION_DOCKERFILE_FOLDER: docker

  lint-markdown:
    name: Lint Markdown
    runs-on: ubuntu-latest
    steps:
      - name: Git checkout
        uses: actions/checkout@v2
      - name: Use Node.js 12.x
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: Run Remark Markdown Linter
        run: |
          npm install
          npm run lint:md
      - name: Run Textlint Markdown Linter
        run: npm run lint:text

  lint-code:
    name: Lint JavaScript
    runs-on: ubuntu-latest
    steps:
      - name: Git checkout
        uses: actions/checkout@v2
      - name: Use Node.js 12.x
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: Run EsLint Node.js Linter
        run: |
          npm install
          npm run lint

  unit-test:
    name: Unit Tests
    runs-on: ubuntu-latest
    services:
      mongodb:
        image: mongo:4.2
        ports:
          - 27017:27017
      mosquitto:
        image: eclipse-mosquitto:1.6.7
        ports:
          - 1883:1883
    strategy:
      matrix:
        node-version:
          # FIXME: node v10 has been deprecated, but we are going to keep its regression for a while
          - 10.x
          - 12.x
          - 14.x
    steps:
      - name: Git checkout
        uses: actions/checkout@v2
      - name: Start RabbitMQ
        uses: Namoshek/rabbitmq-github-action@v1.1.0
        with:
          version: "3.8.9-management"
          ports: "5672:5672"
          definitions: ${{ github.workspace }}/docs/rabbitmq-definitions.json
      - name: "Install Node.js ${{ matrix.node-version }}"
        uses: actions/setup-node@v1
        with:
          node-version: "${{ matrix.node-version }}"
      - name: "Unit Tests with Node.js ${{ matrix.node-version }}"
        run: |
          npm install
          npm test

  code-coverage:
    name: Coveralls Code Coverage
    runs-on: ubuntu-latest
    needs: unit-test
    services:
      mongodb:
        image: mongo:4.2
        ports:
          - 27017:27017
      mosquitto:
        image: eclipse-mosquitto:1.6.7
        ports:
          - 1883:1883
    steps:
      - name: Git checkout
        uses: actions/checkout@v2
      - name: Start RabbitMQ
        uses: Namoshek/rabbitmq-github-action@v1.1.0
        with:
          version: "3.8.9-management"
          ports: "5672:5672"
          definitions: ${{ github.workspace }}/docs/rabbitmq-definitions.json
      - name: "Test Coverage with Node.js 12.x"
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - run: |
          npm install
          npm run test:coverage
      - name: Push to Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
